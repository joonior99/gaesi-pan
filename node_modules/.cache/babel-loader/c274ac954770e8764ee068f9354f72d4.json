{"ast":null,"code":"import { firestore } from \"../../firebase\";\nconst board_db = firestore.collection(\"board\"); // Actions\n\nconst LOAD = \"board/LOAD\";\nconst CREATE = \"board/CREATE\";\nconst DELETE = \"board/DELETE\"; // const UPDATE = \"board/UPDATE\";\n\nconst initialState = {\n  board_list: [{\n    name: \"Jason\",\n    title: \"This place is cool\",\n    contents: \"Nice to meet you everyone!\",\n    completed: false\n  }, {\n    name: \"Victoria\",\n    title: \"I like it\",\n    contents: \"Gaesi-pan website is pretty good\",\n    completed: false\n  }, {\n    name: \"영수\",\n    title: \"안녕하세요\",\n    contents: \"저는 영수라고 합니다 반가워요~\",\n    completed: false\n  }, {\n    name: \"윤아\",\n    title: \"게시판 마음에 들어요^^\",\n    contents: \"앞으로 자주 이용할게요!\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }, {\n    name: \"kevin\",\n    title: \"I'm home!\",\n    contents: \"alone~\",\n    completed: false\n  }]\n}; // Action Creators\n\nexport const loadBoard = board => {\n  return {\n    type: LOAD,\n    board\n  };\n};\nexport const createBoard = board => {\n  return {\n    type: CREATE,\n    board\n  };\n};\nexport const deleteBoard = board => {\n  return {\n    type: DELETE,\n    board\n  };\n}; // export const updateBoard = (board) => {\n//   return { type: UPDATE, board };\n// };\n//   export const loadBoardFB = () => {\n//   return function (dispatch) {\n//     board_db.get().then((docs) => {\n//       let board_data = [];\n//       docs.forEach((doc) => {\n//       console.log(doc.data());\n//         if (doc.exists) {\n//           board_data = [...board_data, { id: doc.id, ...doc.data() }];\n//           // board_data = [...board_data, { ...doc.data() }];\n//         }\n//       });\n//       console.log(board_data);\n//       dispatch(loadBoard(board_data));\n//     });\n//   };\n// };          \n// export const addBucketFB = (bucket) => {\n//   return function (dispatch) {\n//     // let bucket_data = { text: bucket, completed: false };\n//     let bucket_data = bucket;\n//     dispatch(isLoaded(false));\n//     bucket_db.add(bucket_data).then(docRef => {\n//       bucket_data = { ...bucket_data, id: docRef.id };\n//       dispatch(createBucket(bucket_data));\n//       dispatch(isLoaded(true));\n//     })\n//   }\n// }\n// export const deleteBucketFB = (bucket) => {\n//   return function (dispatch, getState){\n//     const _bucket_data = getState().bucket.list[bucket];\n//     if(!_bucket_data.id){\n//       return;\n//     }\n//     bucket_db.doc(_bucket_data.id).delete().then(docRef => {\n//       dispatch(deleteBucket(bucket));\n//     }).catch(error => {\n//       console.log(error);\n//     });\n//   }\n// }\n// Reducer\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    // do reducer stuff\n    case \"board/LOAD\":\n      {\n        if (action.board.length > 0) {\n          return {\n            list: action.board\n          };\n        }\n\n        return state;\n      }\n\n    case \"board/CREATE\":\n      {\n        const new_board_list = [action.board, ...state.board_list];\n        return { ...state,\n          board_list: new_board_list\n        };\n      }\n\n    case \"board/DELETE\":\n      {\n        const boardlist = state.board_list.filter((l, idx) => {\n          if (idx !== action.board) {\n            return l;\n          }\n        });\n        return {\n          board_list: boardlist\n        };\n      }\n    // case \"board/UPDATE\": {\n    //   const boardlist = state.board_list.map((l, idx) => {\n    //     if (idx === action.board) {\n    //       return { ...l, completed: true };\n    //     }\n    //     return l;\n    //   });\n    //   return { board_list: boardlist };\n    // }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/joonyeonhwang/Downloads/항해99/gaesipan/src/redux/modules/board.js"],"names":["firestore","board_db","collection","LOAD","CREATE","DELETE","initialState","board_list","name","title","contents","completed","loadBoard","board","type","createBoard","deleteBoard","reducer","state","action","length","list","new_board_list","boardlist","filter","l","idx"],"mappings":"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","sourcesContent":["import { firestore } from \"../../firebase\";\n\nconst board_db = firestore.collection(\"board\");\n\n// Actions\nconst LOAD = \"board/LOAD\";\nconst CREATE = \"board/CREATE\";\nconst DELETE = \"board/DELETE\";\n// const UPDATE = \"board/UPDATE\";\n\nconst initialState = {\n  \n  board_list: \n  [\n    {\n      name: \"Jason\",\n      title: \"This place is cool\",\n      contents: \"Nice to meet you everyone!\",\n      completed: false\n    },\n\n    {\n      name: \"Victoria\",\n      title: \"I like it\",\n      contents: \"Gaesi-pan website is pretty good\",\n      completed: false\n    },\n\n    { name: \"영수\", title: \"안녕하세요\", contents: \"저는 영수라고 합니다 반가워요~\", completed: false },\n    { name: \"윤아\", title: \"게시판 마음에 들어요^^\", contents: \"앞으로 자주 이용할게요!\", completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n    { name: \"kevin\", title: \"I'm home!\",contents: \"alone~\",completed: false },\n  ],\n};\n\n// Action Creators\nexport const loadBoard = (board) => {\n  return { type: LOAD, board };\n};\n\nexport const createBoard = (board) => {\n  return { type: CREATE, board };\n};\n\nexport const deleteBoard = (board) => {\n  return { type: DELETE, board };\n};\n\n// export const updateBoard = (board) => {\n//   return { type: UPDATE, board };\n// };\n\n//   export const loadBoardFB = () => {\n//   return function (dispatch) {\n\n//     board_db.get().then((docs) => {\n//       let board_data = [];\n\n//       docs.forEach((doc) => {\n//       console.log(doc.data());\n//         if (doc.exists) {\n//           board_data = [...board_data, { id: doc.id, ...doc.data() }];\n//           // board_data = [...board_data, { ...doc.data() }];\n//         }\n//       });\n\n//       console.log(board_data);\n//       dispatch(loadBoard(board_data));\n//     });\n//   };\n// };          \n\n// export const addBucketFB = (bucket) => {\n//   return function (dispatch) {\n//     // let bucket_data = { text: bucket, completed: false };\n//     let bucket_data = bucket;\n\n//     dispatch(isLoaded(false));\n\n//     bucket_db.add(bucket_data).then(docRef => {\n//       bucket_data = { ...bucket_data, id: docRef.id };\n\n//       dispatch(createBucket(bucket_data));\n//       dispatch(isLoaded(true));\n//     })\n//   }\n// }\n\n// export const deleteBucketFB = (bucket) => {\n//   return function (dispatch, getState){\n//     const _bucket_data = getState().bucket.list[bucket];\n\n//     if(!_bucket_data.id){\n//       return;\n//     }\n\n//     bucket_db.doc(_bucket_data.id).delete().then(docRef => {\n//       dispatch(deleteBucket(bucket));\n//     }).catch(error => {\n//       console.log(error);\n//     });\n//   }\n// }\n\n// Reducer\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    // do reducer stuff\n    case \"board/LOAD\": { \n        if (action.board.length > 0) {\n            return { list: action.board};\n        }\n        return state;\n    }\n     \n    case \"board/CREATE\": {\n      const new_board_list = [action.board, ...state.board_list ];\n      return { ...state, board_list: new_board_list};\n    }\n\n    case \"board/DELETE\": {\n      const boardlist = state.board_list.filter((l, idx) => {\n        if (idx !== action.board) {\n          return l;\n        }\n      });\n      return { board_list: boardlist };\n    }\n\n    // case \"board/UPDATE\": {\n    //   const boardlist = state.board_list.map((l, idx) => {\n    //     if (idx === action.board) {\n\n    //       return { ...l, completed: true };\n    //     }\n\n    //     return l;\n    //   });\n\n    //   return { board_list: boardlist };\n    // }\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}