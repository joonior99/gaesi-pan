{"ast":null,"code":"// Actions\nconst LOAD = \"board/LOAD\";\nconst CREATE = \"board/CREATE\";\nconst DELETE = \"board/DELETE\"; // const UPDATE = \"bucket/UPDATE\";\n// const LOADED = \"bucket/LOADED\";\n\nconst initialState = {\n  //   list: [\"영화관 가기\", \"매일 책읽기\", \"수영 배우기\"],\n  board_list: [{\n    number: \"1\",\n    name: \"피터팬\",\n    title: \"팅커벨은 어디있어?\",\n    contents: \"제발 돌아와줘\"\n  }, {\n    number: \"2\",\n    name: \"라모스\",\n    title: \"나는 레알의 전설\",\n    contents: \"챔스의 사나이\"\n  }]\n}; // Action Creators\n\nexport const loadBoard = board => {\n  return {\n    type: LOAD,\n    board\n  };\n};\nexport const createBoard = board => {\n  return {\n    type: CREATE,\n    board\n  };\n};\nexport const deleteBoard = board => {\n  return {\n    type: DELETE,\n    board\n  };\n}; // export const updateBucket = (bucket) => {\n//   return { type: UPDATE, bucket };\n// };\n// export const isLoaded = (loaded) => {\n//   return {type: LOADED, loaded};\n// }\n// Reducer\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    // do reducer stuff\n    case \"board/LOAD\":\n      {\n        if (action.board.length > 0) {\n          return {\n            list: action.board\n          };\n        }\n\n        return state;\n      }\n\n    case \"board/CREATE\":\n      {\n        const new_board_list = [...state.board_list, action.board];\n        return { ...state,\n          board_list: new_board_list\n        };\n      }\n\n    case \"board/DELETE\":\n      {\n        const board_list = state.board_list.filter((l, idx) => {\n          if (idx !== action.board) {\n            return l;\n          }\n        });\n        return {\n          list: board_list\n        };\n      }\n    // case \"bucket/UPDATE\": {\n    //   const bucket_list = state.list.map((l, idx) => {\n    //     if (idx === action.bucket) {\n    //       return { ...l, completed: true };\n    //     }\n    //     return l;\n    //   });\n    //   return { list: bucket_list };\n    // }\n    // case \"bucket/LOADED\": {\n    //   return {...state, is_loaded: action.loaded};\n    // }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/joonyeonhwang/Downloads/항해99/gaesipan/src/redux/modules/board.js"],"names":["LOAD","CREATE","DELETE","initialState","board_list","number","name","title","contents","loadBoard","board","type","createBoard","deleteBoard","reducer","state","action","length","list","new_board_list","filter","l","idx"],"mappings":"AAAA;AACA,MAAMA,IAAI,GAAG,YAAb;AACA,MAAMC,MAAM,GAAG,cAAf;AACA,MAAMC,MAAM,GAAG,cAAf,C,CAEA;AAEA;;AAEA,MAAMC,YAAY,GAAG;AACnB;AACAC,EAAAA,UAAU,EAAE,CACV;AACEC,IAAAA,MAAM,EAAE,GADV;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,KAAK,EAAE,YAHT;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GADU,EAQV;AACEH,IAAAA,MAAM,EAAE,GADV;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,KAAK,EAAE,WAHT;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GARU;AAFO,CAArB,C,CAoBA;;AACA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAClC,SAAO;AAAEC,IAAAA,IAAI,EAAEX,IAAR;AAAcU,IAAAA;AAAd,GAAP;AACD,CAFM;AAIP,OAAO,MAAME,WAAW,GAAIF,KAAD,IAAW;AACpC,SAAO;AAAEC,IAAAA,IAAI,EAAEV,MAAR;AAAgBS,IAAAA;AAAhB,GAAP;AACD,CAFM;AAIP,OAAO,MAAMG,WAAW,GAAIH,KAAD,IAAW;AACpC,SAAO;AAAEC,IAAAA,IAAI,EAAET,MAAR;AAAgBQ,IAAAA;AAAhB,GAAP;AACD,CAFM,C,CAIP;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACA,eAAe,SAASI,OAAT,CAAiBC,KAAK,GAAGZ,YAAzB,EAAuCa,MAAM,GAAG,EAAhD,EAAoD;AACjE,UAAQA,MAAM,CAACL,IAAf;AACE;AACA,SAAK,YAAL;AAAmB;AACf,YAAIK,MAAM,CAACN,KAAP,CAAaO,MAAb,GAAsB,CAA1B,EAA6B;AACzB,iBAAO;AAAEC,YAAAA,IAAI,EAAEF,MAAM,CAACN;AAAf,WAAP;AACH;;AACD,eAAOK,KAAP;AACH;;AAED,SAAK,cAAL;AAAqB;AACnB,cAAMI,cAAc,GAAG,CAAC,GAAGJ,KAAK,CAACX,UAAV,EAAsBY,MAAM,CAACN,KAA7B,CAAvB;AACA,eAAO,EAAE,GAAGK,KAAL;AAAYX,UAAAA,UAAU,EAAEe;AAAxB,SAAP;AACD;;AAED,SAAK,cAAL;AAAqB;AACnB,cAAMf,UAAU,GAAGW,KAAK,CAACX,UAAN,CAAiBgB,MAAjB,CAAwB,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACrD,cAAIA,GAAG,KAAKN,MAAM,CAACN,KAAnB,EAA0B;AACxB,mBAAOW,CAAP;AACD;AACF,SAJkB,CAAnB;AAKA,eAAO;AAAEH,UAAAA,IAAI,EAAEd;AAAR,SAAP;AACD;AAED;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACE,aAAOW,KAAP;AAzCJ;AA2CD","sourcesContent":["// Actions\nconst LOAD = \"board/LOAD\";\nconst CREATE = \"board/CREATE\";\nconst DELETE = \"board/DELETE\";\n\n// const UPDATE = \"bucket/UPDATE\";\n\n// const LOADED = \"bucket/LOADED\";\n\nconst initialState = {\n  //   list: [\"영화관 가기\", \"매일 책읽기\", \"수영 배우기\"],\n  board_list: [\n    {\n      number: \"1\",\n      name: \"피터팬\",\n      title: \"팅커벨은 어디있어?\",\n      contents: \"제발 돌아와줘\"\n    },\n\n    {\n      number: \"2\",\n      name: \"라모스\",\n      title: \"나는 레알의 전설\",\n      contents: \"챔스의 사나이\"\n    },\n    \n  ],\n};\n\n// Action Creators\nexport const loadBoard = (board) => {\n  return { type: LOAD, board };\n};\n\nexport const createBoard = (board) => {\n  return { type: CREATE, board };\n};\n\nexport const deleteBoard = (board) => {\n  return { type: DELETE, board };\n};\n\n// export const updateBucket = (bucket) => {\n//   return { type: UPDATE, bucket };\n// };\n\n// export const isLoaded = (loaded) => {\n//   return {type: LOADED, loaded};\n// }\n\n// Reducer\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    // do reducer stuff\n    case \"board/LOAD\": { \n        if (action.board.length > 0) {\n            return { list: action.board };\n        }\n        return state;\n    }\n     \n    case \"board/CREATE\": {\n      const new_board_list = [...state.board_list, action.board];\n      return { ...state, board_list: new_board_list };\n    }\n\n    case \"board/DELETE\": {\n      const board_list = state.board_list.filter((l, idx) => {\n        if (idx !== action.board) {\n          return l;\n        }\n      });\n      return { list: board_list };\n    }\n\n    // case \"bucket/UPDATE\": {\n    //   const bucket_list = state.list.map((l, idx) => {\n    //     if (idx === action.bucket) {\n\n    //       return { ...l, completed: true };\n    //     }\n\n    //     return l;\n    //   });\n\n    //   return { list: bucket_list };\n    // }\n\n    // case \"bucket/LOADED\": {\n    //   return {...state, is_loaded: action.loaded};\n    // }\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}