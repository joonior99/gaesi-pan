{"ast":null,"code":"// Actions\nconst LOAD = \"board/LOAD\";\nconst CREATE = \"board/CREATE\"; // const DELETE = \"bucket/DELETE\";\n// const UPDATE = \"bucket/UPDATE\";\n// const LOADED = \"bucket/LOADED\";\n\nconst initialState = {\n  //   list: [\"영화관 가기\", \"매일 책읽기\", \"수영 배우기\"],\n  board_list: [{\n    number: \"1\",\n    name: \"피터팬\",\n    title: \"팅커벨은 어디있어?\"\n  }, {\n    number: \"2\",\n    name: \"라모스\",\n    title: \"나는 레알의 전설\"\n  }]\n}; // Action Creators\n\nexport const loadBoard = board => {\n  return {\n    type: LOAD,\n    board\n  };\n};\nexport const createBoard = board => {\n  return {\n    type: CREATE,\n    board\n  };\n}; // export const deleteBucket = (bucket) => {\n//   return { type: DELETE, bucket };\n// };\n// export const updateBucket = (bucket) => {\n//   return { type: UPDATE, bucket };\n// };\n// export const isLoaded = (loaded) => {\n//   return {type: LOADED, loaded};\n// }\n// Reducer\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    // do reducer stuff\n    case \"board/LOAD\":\n      return state;\n\n    case \"board/CREATE\":\n      const new_board_list = [...state.list, action.board];\n      return {\n        list: new_board_list\n      };\n    // case \"bucket/DELETE\": {\n    //   const bucket_list = state.list.filter((l, idx) => {\n    //     if (idx !== action.bucket) {\n    //       return l;\n    //     }\n    //   });\n    //   return { list: bucket_list };\n    // }\n    // case \"bucket/UPDATE\": {\n    //   const bucket_list = state.list.map((l, idx) => {\n    //     if (idx === action.bucket) {\n    //       return { ...l, completed: true };\n    //     }\n    //     return l;\n    //   });\n    //   return { list: bucket_list };\n    // }\n    // case \"bucket/LOADED\": {\n    //   return {...state, is_loaded: action.loaded};\n    // }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/joonyeonhwang/Downloads/항해99/gaesipan/src/redux/modules/board.js"],"names":["LOAD","CREATE","initialState","board_list","number","name","title","loadBoard","board","type","createBoard","reducer","state","action","new_board_list","list"],"mappings":"AAAA;AACA,MAAMA,IAAI,GAAG,YAAb;AACA,MAAMC,MAAM,GAAG,cAAf,C,CAEA;AACA;AAEA;;AAEA,MAAMC,YAAY,GAAG;AACnB;AACAC,EAAAA,UAAU,EAAE,CACV;AACEC,IAAAA,MAAM,EAAE,GADV;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,KAAK,EAAE;AAHT,GADU,EAMV;AACEF,IAAAA,MAAM,EAAE,GADV;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,KAAK,EAAE;AAHT,GANU;AAFO,CAArB,C,CAiBA;;AACA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAClC,SAAO;AAAEC,IAAAA,IAAI,EAAET,IAAR;AAAcQ,IAAAA;AAAd,GAAP;AACD,CAFM;AAIP,OAAO,MAAME,WAAW,GAAIF,KAAD,IAAW;AACpC,SAAO;AAAEC,IAAAA,IAAI,EAAER,MAAR;AAAgBO,IAAAA;AAAhB,GAAP;AACD,CAFM,C,CAIP;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACA,eAAe,SAASG,OAAT,CAAiBC,KAAK,GAAGV,YAAzB,EAAuCW,MAAM,GAAG,EAAhD,EAAoD;AACjE,UAAQA,MAAM,CAACJ,IAAf;AACE;AACA,SAAK,YAAL;AACE,aAAOG,KAAP;;AAEF,SAAK,cAAL;AACE,YAAME,cAAc,GAAG,CAAC,GAAGF,KAAK,CAACG,IAAV,EAAgBF,MAAM,CAACL,KAAvB,CAAvB;AACA,aAAO;AAAEO,QAAAA,IAAI,EAAED;AAAR,OAAP;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACE,aAAOF,KAAP;AApCJ;AAsCD","sourcesContent":["// Actions\nconst LOAD = \"board/LOAD\";\nconst CREATE = \"board/CREATE\";\n\n// const DELETE = \"bucket/DELETE\";\n// const UPDATE = \"bucket/UPDATE\";\n\n// const LOADED = \"bucket/LOADED\";\n\nconst initialState = {\n  //   list: [\"영화관 가기\", \"매일 책읽기\", \"수영 배우기\"],\n  board_list: [\n    {\n      number: \"1\",\n      name: \"피터팬\",\n      title: \"팅커벨은 어디있어?\",\n    },\n    {\n      number: \"2\",\n      name: \"라모스\",\n      title: \"나는 레알의 전설\",\n    },\n    \n  ],\n};\n\n// Action Creators\nexport const loadBoard = (board) => {\n  return { type: LOAD, board };\n};\n\nexport const createBoard = (board) => {\n  return { type: CREATE, board };\n};\n\n// export const deleteBucket = (bucket) => {\n//   return { type: DELETE, bucket };\n// };\n\n// export const updateBucket = (bucket) => {\n//   return { type: UPDATE, bucket };\n// };\n\n// export const isLoaded = (loaded) => {\n//   return {type: LOADED, loaded};\n// }\n\n// Reducer\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    // do reducer stuff\n    case \"board/LOAD\":\n      return state;\n\n    case \"board/CREATE\":\n      const new_board_list = [...state.list, action.board];\n      return { list: new_board_list };\n\n    // case \"bucket/DELETE\": {\n    //   const bucket_list = state.list.filter((l, idx) => {\n    //     if (idx !== action.bucket) {\n    //       return l;\n    //     }\n    //   });\n    //   return { list: bucket_list };\n    // }\n\n    // case \"bucket/UPDATE\": {\n    //   const bucket_list = state.list.map((l, idx) => {\n    //     if (idx === action.bucket) {\n\n    //       return { ...l, completed: true };\n    //     }\n\n    //     return l;\n    //   });\n\n    //   return { list: bucket_list };\n    // }\n\n    // case \"bucket/LOADED\": {\n    //   return {...state, is_loaded: action.loaded};\n    // }\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}