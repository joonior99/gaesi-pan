{"ast":null,"code":"// import { firestore } from \"../../firebase\";\n// const board_db = firestore.collection(\"board\");\n// configStore.js 만들고 firebase 설치 후 import 시키고 firestore 대쉬보드의 collection 가져오고는 이해함.\n// 리덕스 모듈에서 파이어베이스 호출하고, 리듀서 수정하고, 컴포넌트에 연결하고 하는 순서는 알 거 같다. \n// loadBoardFB라는 호출 함수 강의자료에 맞게 코드 작성하고 위의 순서에 맞게 잘한 거 같은데 에러의 원인을 모르겠다.\n// loadBoardFB로 호출하면 initialstate의 board_list는 삭제해도 될까요? \n// Actions\nconst LOAD = \"board/LOAD\";\nconst CREATE = \"board/CREATE\";\nconst DELETE = \"board/DELETE\"; // const UPDATE = \"board/UPDATE\";\n\nconst initialState = {\n  board_list: [{\n    name: \"Jason\",\n    title: \"This place is cool\",\n    contents: \"Nice to meet you everyone!\",\n    completed: false\n  }, {\n    name: \"Victoria\",\n    title: \"I like it\",\n    contents: \"Gaesi-pan website is pretty good\",\n    completed: false\n  }, {\n    name: \"영수\",\n    title: \"안녕하세요\",\n    contents: \"저는 영수라고 합니다 반가워요~\",\n    completed: false\n  }, {\n    name: \"윤아\",\n    title: \"게시판 마음에 들어요^^\",\n    contents: \"앞으로 자주 이용할게요!\",\n    completed: false\n  }, {\n    name: \"윤아\",\n    title: \"게시판 마음에 들어요^^\",\n    contents: \"앞으로 자주 이용할게요!\",\n    completed: false\n  }, {\n    name: \"윤아\",\n    title: \"게시판 마음에 들어요^^\",\n    contents: \"앞으로 자주 이용할게요!\",\n    completed: false\n  }, {\n    name: \"윤아\",\n    title: \"게시판 마음에 들어요^^\",\n    contents: \"앞으로 자주 이용할게요!\",\n    completed: false\n  }, {\n    name: \"윤아\",\n    title: \"게시판 마음에 들어요^^\",\n    contents: \"앞으로 자주 이용할게요!\",\n    completed: false\n  }, {\n    name: \"윤아\",\n    title: \"게시판 마음에 들어요^^\",\n    contents: \"앞으로 자주 이용할게요!\",\n    completed: false\n  }, {\n    name: \"윤아\",\n    title: \"게시판 마음에 들어요^^\",\n    contents: \"앞으로 자주 이용할게요!\",\n    completed: false\n  }, {\n    name: \"윤아\",\n    title: \"게시판 마음에 들어요^^\",\n    contents: \"앞으로 자주 이용할게요!\",\n    completed: false\n  }, {\n    name: \"윤아\",\n    title: \"게시판 마음에 들어요^^\",\n    contents: \"앞으로 자주 이용할게요!\",\n    completed: false\n  }, {\n    name: \"윤아\",\n    title: \"게시판 마음에 들어요^^\",\n    contents: \"앞으로 자주 이용할게요!\",\n    completed: false\n  }, {\n    name: \"윤아\",\n    title: \"게시판 마음에 들어요^^\",\n    contents: \"앞으로 자주 이용할게요!\",\n    completed: false\n  }, {\n    name: \"윤아\",\n    title: \"게시판 마음에 들어요^^\",\n    contents: \"앞으로 자주 이용할게요!\",\n    completed: false\n  }, {\n    name: \"윤아\",\n    title: \"게시판 마음에 들어요^^\",\n    contents: \"앞으로 자주 이용할게요!\",\n    completed: false\n  }, {\n    name: \"윤아\",\n    title: \"게시판 마음에 들어요^^\",\n    contents: \"앞으로 자주 이용할게요!\",\n    completed: false\n  }, {\n    name: \"윤아\",\n    title: \"게시판 마음에 들어요^^\",\n    contents: \"앞으로 자주 이용할게요!\",\n    completed: false\n  }, {\n    name: \"윤아\",\n    title: \"게시판 마음에 들어요^^\",\n    contents: \"앞으로 자주 이용할게요!\",\n    completed: false\n  }, {\n    name: \"윤아\",\n    title: \"게시판 마음에 들어요^^\",\n    contents: \"앞으로 자주 이용할게요!\",\n    completed: false\n  }, {\n    name: \"윤아\",\n    title: \"게시판 마음에 들어요^^\",\n    contents: \"앞으로 자주 이용할게요!\",\n    completed: false\n  }, {\n    name: \"윤아\",\n    title: \"게시판 마음에 들어요^^\",\n    contents: \"앞으로 자주 이용할게요!\",\n    completed: false\n  }, {\n    name: \"윤아\",\n    title: \"게시판 마음에 들어요^^\",\n    contents: \"앞으로 자주 이용할게요!\",\n    completed: false\n  }]\n}; // Action Creators\n\nexport const loadBoard = board => {\n  return {\n    type: LOAD,\n    board\n  };\n};\nexport const createBoard = board => {\n  return {\n    type: CREATE,\n    board\n  };\n};\nexport const deleteBoard = board => {\n  return {\n    type: DELETE,\n    board\n  };\n}; // export const updateBoard = (board) => {\n//   return { type: UPDATE, board };\n// };\n// .orderBy(\"board_id\", \"desc\")\n//   export const loadBoardFB = () => {\n//   return function (dispatch) {\n//     board_db.get().then((docs) => {\n//       let board_data = [];\n//       docs.forEach((doc) => {\n//       console.log(doc.data());\n//         if (doc.exists) {\n//           board_data = [...board_data, { id: doc.id, ...doc.data() }];\n//           // board_data = [...board_data, { ...doc.data() }];\n//         }\n//       });\n//       console.log(board_data,'loadBoardFB');\n//       dispatch(loadBoard(board_data));\n//       // console.log(getState().board);\n//     });\n//   };\n// };          \n// export const addBoardFB = (board) => {\n//   return function (dispatch) {\n//     // console.log(board);\n//     let board_data = { ...board, completed: false };\n//     console.log(board_data);\n//     board_db.add(board_data).then(docRef => {\n//       board_data = { ...board_data, id: docRef.id };\n//       dispatch(createBoard(board_data));\n//     })\n//   }\n// }\n// export const deleteBoardFB = (board) => {\n//   return function (dispatch, getState){\n//     const _board_data = getState().board.list[board];\n//     if(!_board_data.id){\n//       return;\n//     }\n//     board_db.doc(_board_data.id).delete().then(docRef => {\n//       dispatch(deleteBoard(board));\n//     }).catch(error => {\n//       console.log(error);\n//     });\n//   }\n// }\n// export const updateBoardFB = (board) => {\n//   return function(dispatch, getState){\n//     const _board_data = getState().board.list[board];\n//     let bucket_data = {..._board_data, completed: true};\n//     // _bucket_data.id가 이 함수에서 나가라 끝내라\n//     if(!_board_data.id){\n//       return;\n//     }\n//     board_db.doc(bucket_data.id).update(bucket_data).then(docRef => {\n//       dispatch(updateBoard(board));\n//     }).catch(error => {\n//       console.log(error);\n//     });\n//   }\n// }\n// Reducer\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    // do reducer stuff\n    case \"board/LOAD\":\n      {\n        console.log(action.board);\n\n        if (action.board.length > 0) {\n          return {\n            board_list: action.board\n          };\n        }\n\n        return state;\n      }\n    // new_board_list처럼 action...과 state 순서 바꾸었더니 메인페이지에서 최신순으로 잘 나왔습니다. 이유가 궁금합니다. \n\n    case \"board/CREATE\":\n      {\n        const new_board_list = [action.board, ...state.board_list];\n        console.log(new_board_list);\n        return { ...state,\n          board_list: new_board_list\n        };\n      }\n\n    case \"board/DELETE\":\n      {\n        const boardlist = state.board_list.filter((l, idx) => {\n          if (idx !== action.board) {\n            return l;\n          }\n        });\n        return {\n          board_list: boardlist\n        };\n      }\n    // case \"board/UPDATE\": {\n    //   const boardlist = state.board_list.map((l, idx) => {\n    //     if (idx === action.board) {\n    //       return { ...l, completed: true };\n    //     }\n    //     return l;\n    //   });\n    //   return { board_list: boardlist };\n    // }\n    //심화 강의에서 const 하고 actioncreators끼리 묶고 export 하는데 여기서는 안해도 괜찮을까요???\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/joonyeonhwang/Downloads/항해99/gaesipan/src/redux/modules/board.js"],"names":["LOAD","CREATE","DELETE","initialState","board_list","name","title","contents","completed","loadBoard","board","type","createBoard","deleteBoard","reducer","state","action","console","log","length","new_board_list","boardlist","filter","l","idx"],"mappings":"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","sourcesContent":["// import { firestore } from \"../../firebase\";\n\n// const board_db = firestore.collection(\"board\");\n\n// configStore.js 만들고 firebase 설치 후 import 시키고 firestore 대쉬보드의 collection 가져오고는 이해함.\n// 리덕스 모듈에서 파이어베이스 호출하고, 리듀서 수정하고, 컴포넌트에 연결하고 하는 순서는 알 거 같다. \n// loadBoardFB라는 호출 함수 강의자료에 맞게 코드 작성하고 위의 순서에 맞게 잘한 거 같은데 에러의 원인을 모르겠다.\n// loadBoardFB로 호출하면 initialstate의 board_list는 삭제해도 될까요? \n\n// Actions\nconst LOAD = \"board/LOAD\";\nconst CREATE = \"board/CREATE\";\nconst DELETE = \"board/DELETE\";\n// const UPDATE = \"board/UPDATE\";\n\nconst initialState = {\n  \n  board_list: \n  [\n    {\n      name: \"Jason\",\n      title: \"This place is cool\",\n      contents: \"Nice to meet you everyone!\",\n      completed: false\n    },\n\n    {\n      name: \"Victoria\",\n      title: \"I like it\",\n      contents: \"Gaesi-pan website is pretty good\",\n      completed: false\n    },\n\n    { name: \"영수\", title: \"안녕하세요\", contents: \"저는 영수라고 합니다 반가워요~\", completed: false },\n    { name: \"윤아\", title: \"게시판 마음에 들어요^^\", contents: \"앞으로 자주 이용할게요!\", completed: false },\n    { name: \"윤아\", title: \"게시판 마음에 들어요^^\", contents: \"앞으로 자주 이용할게요!\", completed: false },\n    { name: \"윤아\", title: \"게시판 마음에 들어요^^\", contents: \"앞으로 자주 이용할게요!\", completed: false },\n    { name: \"윤아\", title: \"게시판 마음에 들어요^^\", contents: \"앞으로 자주 이용할게요!\", completed: false },\n    { name: \"윤아\", title: \"게시판 마음에 들어요^^\", contents: \"앞으로 자주 이용할게요!\", completed: false },\n    { name: \"윤아\", title: \"게시판 마음에 들어요^^\", contents: \"앞으로 자주 이용할게요!\", completed: false },\n    { name: \"윤아\", title: \"게시판 마음에 들어요^^\", contents: \"앞으로 자주 이용할게요!\", completed: false },\n    { name: \"윤아\", title: \"게시판 마음에 들어요^^\", contents: \"앞으로 자주 이용할게요!\", completed: false },\n    { name: \"윤아\", title: \"게시판 마음에 들어요^^\", contents: \"앞으로 자주 이용할게요!\", completed: false },\n    { name: \"윤아\", title: \"게시판 마음에 들어요^^\", contents: \"앞으로 자주 이용할게요!\", completed: false },\n    { name: \"윤아\", title: \"게시판 마음에 들어요^^\", contents: \"앞으로 자주 이용할게요!\", completed: false },\n    { name: \"윤아\", title: \"게시판 마음에 들어요^^\", contents: \"앞으로 자주 이용할게요!\", completed: false },\n    { name: \"윤아\", title: \"게시판 마음에 들어요^^\", contents: \"앞으로 자주 이용할게요!\", completed: false },\n    { name: \"윤아\", title: \"게시판 마음에 들어요^^\", contents: \"앞으로 자주 이용할게요!\", completed: false },\n    { name: \"윤아\", title: \"게시판 마음에 들어요^^\", contents: \"앞으로 자주 이용할게요!\", completed: false },\n    { name: \"윤아\", title: \"게시판 마음에 들어요^^\", contents: \"앞으로 자주 이용할게요!\", completed: false },\n    { name: \"윤아\", title: \"게시판 마음에 들어요^^\", contents: \"앞으로 자주 이용할게요!\", completed: false },\n    { name: \"윤아\", title: \"게시판 마음에 들어요^^\", contents: \"앞으로 자주 이용할게요!\", completed: false },\n    { name: \"윤아\", title: \"게시판 마음에 들어요^^\", contents: \"앞으로 자주 이용할게요!\", completed: false },\n    { name: \"윤아\", title: \"게시판 마음에 들어요^^\", contents: \"앞으로 자주 이용할게요!\", completed: false },\n    \n  ],\n};\n\n// Action Creators\nexport const loadBoard = (board) => {\n  return { type: LOAD, board };\n};\n\nexport const createBoard = (board) => {\n  return { type: CREATE, board };\n};\n\nexport const deleteBoard = (board) => {\n  return { type: DELETE, board };\n};\n\n// export const updateBoard = (board) => {\n//   return { type: UPDATE, board };\n// };\n\n// .orderBy(\"board_id\", \"desc\")\n//   export const loadBoardFB = () => {\n//   return function (dispatch) {\n\n//     board_db.get().then((docs) => {\n//       let board_data = [];\n\n//       docs.forEach((doc) => {\n//       console.log(doc.data());\n//         if (doc.exists) {\n//           board_data = [...board_data, { id: doc.id, ...doc.data() }];\n//           // board_data = [...board_data, { ...doc.data() }];\n//         }\n//       });\n\n//       console.log(board_data,'loadBoardFB');\n//       dispatch(loadBoard(board_data));\n//       // console.log(getState().board);\n//     });\n//   };\n// };          \n\n// export const addBoardFB = (board) => {\n//   return function (dispatch) {\n//     // console.log(board);\n//     let board_data = { ...board, completed: false };\n//     console.log(board_data);\n\n//     board_db.add(board_data).then(docRef => {\n//       board_data = { ...board_data, id: docRef.id };\n\n//       dispatch(createBoard(board_data));\n//     })\n//   }\n// }\n\n// export const deleteBoardFB = (board) => {\n//   return function (dispatch, getState){\n//     const _board_data = getState().board.list[board];\n\n//     if(!_board_data.id){\n//       return;\n//     }\n\n//     board_db.doc(_board_data.id).delete().then(docRef => {\n//       dispatch(deleteBoard(board));\n//     }).catch(error => {\n//       console.log(error);\n//     });\n//   }\n// }\n\n// export const updateBoardFB = (board) => {\n//   return function(dispatch, getState){\n//     const _board_data = getState().board.list[board];\n\n//     let bucket_data = {..._board_data, completed: true};\n\n//     // _bucket_data.id가 이 함수에서 나가라 끝내라\n//     if(!_board_data.id){\n//       return;\n//     }\n\n//     board_db.doc(bucket_data.id).update(bucket_data).then(docRef => {\n//       dispatch(updateBoard(board));\n//     }).catch(error => {\n//       console.log(error);\n//     });\n//   }\n// }\n\n// Reducer\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    // do reducer stuff\n    case \"board/LOAD\": { \n        console.log(action.board);\n      if (action.board.length > 0) {\n            return { board_list: action.board};\n        }\n        return state;\n    }\n     // new_board_list처럼 action...과 state 순서 바꾸었더니 메인페이지에서 최신순으로 잘 나왔습니다. 이유가 궁금합니다. \n    case \"board/CREATE\": {\n      const new_board_list = [ action.board, ...state.board_list ];\n      console.log(new_board_list);\n      return { ...state, board_list: new_board_list};\n    }\n\n    case \"board/DELETE\": {\n      const boardlist = state.board_list.filter((l, idx) => {\n        if (idx !== action.board) {\n          return l;\n        }\n      });\n      return { board_list: boardlist };\n    }\n\n    // case \"board/UPDATE\": {\n    //   const boardlist = state.board_list.map((l, idx) => {\n    //     if (idx === action.board) {\n\n    //       return { ...l, completed: true };\n    //     }\n\n    //     return l;\n    //   });\n\n    //   return { board_list: boardlist };\n    // }\n\n    //심화 강의에서 const 하고 actioncreators끼리 묶고 export 하는데 여기서는 안해도 괜찮을까요???\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}